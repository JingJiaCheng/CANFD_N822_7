
#ifndef ICU_CFG_DER_H
#define ICU_CFG_DER_H

/** \file
 ** \brief AUTOSAR Icu ICU Driver
 **
 ** This file contains the all configuration declarations for
 ** the AUTOSAR module Icu that are derivative dependent.
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL40-DRV
 **
 ** (c) 2014-2017, Cypress Semiconductor Corporation. All rights reserved.
 **
 ** Warranty and Disclaimer
 **
 ** This software product is property of Cypress Semiconductor Corporation or
 ** its subsidiaries.
 ** Any use and/or distribution rights for this software product are provided
 ** only under the Cypress Software License Agreement.
 ** Any use and/or distribution of this software product not in accordance with
 ** the terms of the Cypress Software License Agreement are unauthorized and
 ** shall constitute an infringement of Cypress intellectual property rights.
*/

/*==================[includes]==============================================*/
#include <Icu_Common_Defines.h>
#include <Icu_Common_Types.h>

/*==================[macros]================================================*/

/* \brief Definition of the maximum number of channels. */
#define ICU_MAX_CHANNEL         (40U)

/* \brief Definition of 32bit ICU resource number to get IO fields. */
#define ICU_ICU_IO_RESOURCE_NUMBER (12U)

/* \brief Definition of ExtInt resource number to get IO fields. */
#define ICU_EXTINT_IO_RESOURCE_NUMBER (4U)

/* \brief Definition of IRQ vector numbers. */
#define ICU_INTERRUPTS_IRQ_NUMBER_24 24U
#define ICU_INTERRUPTS_IRQ_NUMBER_29 29U
#define ICU_INTERRUPTS_IRQ_NUMBER_32 32U

/* \brief Base address of Icu resource. */
#ifndef __MCAL_IO_DEFINE
  #define ICU_BASE_ADDR_EXTINT_0   ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(0xB0620000U) )
  #define ICU_BASE_ADDR_EXTINT_5   ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(0xB0620000U) )
  #define ICU_BASE_ADDR_EXTINT_8   ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(0xB0620000U) )
#else
  #define ICU_BASE_ADDR_EXTINT_0 ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))&Icu_EicRegister[ (uint8)(0U / 32U) ] )
  #define ICU_BASE_ADDR_EXTINT_5 ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))&Icu_EicRegister[ (uint8)(5U / 32U) ] )
  #define ICU_BASE_ADDR_EXTINT_8 ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))&Icu_EicRegister[ (uint8)(8U / 32U) ] )
#endif


/* \brief Address of IRC register. */
#ifndef __MCAL_IO_DEFINE
  #define ICU_IRC_UNLOCK_ADDR ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(0xB0400D30U) )
  #define ICU_IRC_CSR_ADDR    ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(0xB0400C98U) )
  #define ICU_IRC_IRQHC_ADDR  ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(0xB0400C48U) )
#else
  #define ICU_IRC_UNLOCK_ADDR ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(&Icu_IrcUnlockRegister) )
  #define ICU_IRC_CSR_ADDR    ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(&Icu_IrcCsrRegister) )
  #define ICU_IRC_IRQHC_ADDR  ( (volatile P2VAR(uint32, ICU_CONST, REGSPACE))(&Icu_IrqhcRegister) )
#endif


/*------------------[ICU Driver Symbolic Channel Names    ]-----------------*/

/*==================[type definitions]======================================*/

/*==================[external function declarations]========================*/

/*==================[internal function declarations]========================*/

/*==================[external constants]===================================*/

/*==================[internal constants]====================================*/

/*==================[external data]=========================================*/

/*==================[internal data]=========================================*/

/*==================[external function definitions]=========================*/

/*==================[internal function definitions]=========================*/

#endif /* ifndef ICU_CFG_DER_H */
/*==================[end of file]===========================================*/
