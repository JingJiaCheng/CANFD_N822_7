/** \brief AUTOSAR Pwm PWM Driver
 **
 ** This file contains all the configuration declarations for the AUTOSAR
 ** module Pwm that are target independent and public part of the API.
 **
 ** Generated from the Pwm_TS_T32D3M1I0R0 Pwm_Cfg.h file
 ** on 2021-03-05 at 10:56:55
 ** by generator build number b150305-0605
 **
 ** Do not edit this file manually.
 ** Any change might compromise the safety integrity level of
 ** the software partition it is contained in.
 **
 ** Product: SW-MCAL40-DRV
 **
 ** (c) 2014-2017, Cypress Semiconductor Corporation. All rights reserved.
 **
 ** Warranty and Disclaimer
 **
 ** This software product is property of Cypress Semiconductor Corporation or
 ** its subsidiaries.
 ** Any use and/or distribution rights for this software product are provided
 ** only under the Cypress Software License Agreement.
 ** Any use and/or distribution of this software product not in accordance with
 ** the terms of the Cypress Software License Agreement are unauthorized and
 ** shall constitute an infringement of Cypress intellectual property rights.
 */

#ifndef PWM_CFG_H_INCLUDED
#define PWM_CFG_H_INCLUDED


/*==================[inclusions]============================================*/

#include <Std_Types.h> /* memory/compiler abstraction */
#include <Pwm_Types.h> 
#include <Os.h>
#include <ErrorCalloutHandler.h>

/*==================[macros]================================================*/

/** Switches the Development Error Notification ON or OFF. */
#define PWM_DEV_ERROR_DETECT  STD_ON

/** This parameter defines the existence and the name of a callout function that is
 called each time an error was detected.
 The function has to have the following parameters: (ModuleId: uint16,
 InstanceId: uint8, ApiId: uint8, ErrorId: uint8) */
#define PWM_ERROR_CALLOUT_FUNCTION ErrorCalloutHandler

/*--------------------------------------------------------------------------*/

/** \brief API restriction */

/** Adds / removes the service Pwm_DeInit() from the code */
#define PWM_DE_INIT_API STD_ON

/** Adds / removes the service Pwm_GetOutputState() from the code */
#define PWM_GET_OUTPUT_STATE_API STD_ON

/** Adds / removes the service Pwm_SetDutyCycle() from the code */
#define PWM_SET_DUTY_CYCLE_API STD_ON

/** Adds / removes the service Pwm_SetOutputToIdle() from the code */
#define PWM_SET_OUTPUT_TO_IDLE_API STD_ON

/** Adds / removes the service PwmSetPeriodAndDuty() from the code */
#define PWM_SET_PERIOD_AND_DUTY_API STD_ON

/** Adds / removes the service Pwm_GetVersionInfo() from the code */
#define PWM_GET_VERSION_INFO_API STD_ON

/** Adds / removes the service Pwm_EnableNotification() and Pwm_DisableNotification() from the code */
#define PWM_NOTIFICATION_SUPPORTED STD_ON

/*--------------------------------------------------------------------------*/

/** \brief channel symbolic names */

/** \brief symbolic name for RT_CLK */
#define PwmConf_PwmChannel_RT_CLK  ((Pwm_ChannelType)0u) 
/** \brief symbolic name for MDO_TFT_BL1_PWM */
#define PwmConf_PwmChannel_MDO_TFT_BL1_PWM  ((Pwm_ChannelType)1u) 
/** \brief symbolic name for PWM_Speed_Out_Uc */
#define PwmConf_PwmChannel_PWM_Speed_Out_Uc  ((Pwm_ChannelType)2u) 
/** \brief symbolic name for MDO_BACKLIGHT_SCALE_PWM */
#define PwmConf_PwmChannel_MDO_BACKLIGHT_SCALE_PWM  ((Pwm_ChannelType)3u) 
/** \brief symbolic name for MDO_BACKLIGHT_Decoration_PWM */
#define PwmConf_PwmChannel_MDO_BACKLIGHT_Decoration_PWM  ((Pwm_ChannelType)4u) 
/** \brief symbolic name for MDO_SHIFT_BAR_EN_PWM */
#define PwmConf_PwmChannel_MDO_SHIFT_BAR_EN_PWM  ((Pwm_ChannelType)5u) 
/** \brief symbolic name for MDO_SHIFT_Telltale_EN_PWM */
#define PwmConf_PwmChannel_MDO_SHIFT_Telltale_EN_PWM  ((Pwm_ChannelType)6u) 
/** \brief symbolic name for MDO_PWM_Backlight_TACHO */
#define PwmConf_PwmChannel_MDO_PWM_Backlight_TACHO  ((Pwm_ChannelType)7u) 
/** \brief symbolic name for MDO_PWM_Backlight_SPEEDO */
#define PwmConf_PwmChannel_MDO_PWM_Backlight_SPEEDO  ((Pwm_ChannelType)8u) 

/** \brief period in ticks per channel */

/** \brief default period in ticks for RT_CLK */
#define PwmConf_PwmPeriodDefault_RT_CLK  ((Pwm_PeriodType)60000u) 
/** \brief default period in ticks for MDO_TFT_BL1_PWM */
#define PwmConf_PwmPeriodDefault_MDO_TFT_BL1_PWM  ((Pwm_PeriodType)3330u) 
/** \brief default period in ticks for PWM_Speed_Out_Uc */
#define PwmConf_PwmPeriodDefault_PWM_Speed_Out_Uc  ((Pwm_PeriodType)58593u) 
/** \brief default period in ticks for MDO_BACKLIGHT_SCALE_PWM */
#define PwmConf_PwmPeriodDefault_MDO_BACKLIGHT_SCALE_PWM  ((Pwm_PeriodType)60000u) 
/** \brief default period in ticks for MDO_BACKLIGHT_Decoration_PWM */
#define PwmConf_PwmPeriodDefault_MDO_BACKLIGHT_Decoration_PWM  ((Pwm_PeriodType)60000u) 
/** \brief default period in ticks for MDO_SHIFT_BAR_EN_PWM */
#define PwmConf_PwmPeriodDefault_MDO_SHIFT_BAR_EN_PWM  ((Pwm_PeriodType)60000u) 
/** \brief default period in ticks for MDO_SHIFT_Telltale_EN_PWM */
#define PwmConf_PwmPeriodDefault_MDO_SHIFT_Telltale_EN_PWM  ((Pwm_PeriodType)60000u) 
/** \brief default period in ticks for MDO_PWM_Backlight_TACHO */
#define PwmConf_PwmPeriodDefault_MDO_PWM_Backlight_TACHO  ((Pwm_PeriodType)60000u) 
/** \brief default period in ticks for MDO_PWM_Backlight_SPEEDO */
#define PwmConf_PwmPeriodDefault_MDO_PWM_Backlight_SPEEDO  ((Pwm_PeriodType)60000u) 



/*--------------------------------------------------------------------------*/

/* Base Timer hardware addresses (base and I/O selection) */

/** Base register address of Base Timer BTimer16bit_18.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_18
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_18 0xB4889800u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_18 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_18.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_18
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_18 0xB4889830u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_18 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_8.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_8
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_8 0xB480A000u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_8 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_8.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_8
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_8 0xB480A030u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_8 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_13.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_13
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_13 0xB4888400u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_13 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_13.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_13
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_13 0xB4888030u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_13 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_23.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_23
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_23 0xB488AC00u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_23 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_23.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_23
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_23 0xB488A830u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_23 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_0.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_0
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_0 0xB4808000u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_0 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_0.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_0
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_0 0xB4808030u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_0 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_11.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_11
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_11 0xB480AC00u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_11 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_11.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_11
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_11 0xB480A830u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_11 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_12.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_12
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_12 0xB4888000u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_12 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_12.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_12
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_12 0xB4888030u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_12 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_19.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_19
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_19 0xB4889C00u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_19 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_19.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_19
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_19 0xB4889830u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_19 is overridden by the environment. This is not intended for production software!
#endif

/** Base register address of Base Timer BTimer16bit_20.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_20
  #define PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_20 0xB488A000u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_20 is overridden by the environment. This is not intended for production software!
#endif

/** I/O Selection register address of Base Timer BTimer16bit_20.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_20
  #define PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_20 0xB488A030u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_20 is overridden by the environment. This is not intended for production software!
#endif

/* Base Timer hardware addresses (simultaneous soft start registers) */

/** Simultaneous Soft Start register address of Btsssr0.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSSSR_ADDRESS_Btsssr0
  #define PWM_CFG_REGISTER_BTSSSR_ADDRESS_Btsssr0 0xB4808034u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSSSR_ADDRESS_Btsssr0 is overridden by the environment. This is not intended for production software!
#endif  

/** Simultaneous Soft Start register address of Btsssr12.
    
    The macro can be overridden by the integrator via command line parameter.
    Doing so is at own risk! */
#ifndef PWM_CFG_REGISTER_BTSSSR_ADDRESS_Btsssr12
  #define PWM_CFG_REGISTER_BTSSSR_ADDRESS_Btsssr12 0xB4888034u
#else
  /* Deviation from MISRA-C:2004 Rule 19.16:
     Unrecognized preprocessing directive has been ignored because of conditional inclusion directives.
     Justification: The preprocessing directive is a warning that indicates a special build 
     configuration which is not suitable for production software. */
  /* PRQA S 3115 1 */
  #warning PWM_CFG_REGISTER_BTSSSR_ADDRESS_Btsssr12 is overridden by the environment. This is not intended for production software!
#endif  

/*--------------------------------------------------------------------------*/

/** \brief Macro holds the complete driver configuration
 ** It is used to initialize the constant driver structure Pwm_ChannelConfig */
#define PWM_CHANNELCONFIG_SETTING \
{\
  { \
    0u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_LOW, /* idle output */ \
    PWM_LOW, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_18, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_18, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[0u], /* channel state pointer */\
  }, \
  { \
    1u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    3330u, /* default period ticks */ \
    PWM_LOW, /* idle output */ \
    PWM_HIGH, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_8, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_8, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[1u], /* channel state pointer */\
  }, \
  { \
    2u, /* channel id */ \
    PWM_VARIABLE_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    58593u, /* default period ticks */ \
    PWM_HIGH, /* idle output */ \
    PWM_LOW, /* active output */ \
    0u, /* start delay */ \
    0x09u, /* prescaler register value, equates to prescaler: 1024 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_13, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_13, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[2u], /* channel state pointer */\
  }, \
  { \
    3u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_LOW, /* idle output */ \
    PWM_HIGH, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_23, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_23, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[3u], /* channel state pointer */\
  }, \
  { \
    4u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_LOW, /* idle output */ \
    PWM_HIGH, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_0, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_0, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[4u], /* channel state pointer */\
  }, \
  { \
    5u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_HIGH, /* idle output */ \
    PWM_LOW, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_11, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_11, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[5u], /* channel state pointer */\
  }, \
  { \
    6u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_HIGH, /* idle output */ \
    PWM_LOW, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_12, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_12, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[6u], /* channel state pointer */\
  }, \
  { \
    7u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_LOW, /* idle output */ \
    PWM_HIGH, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_19, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_19, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[7u], /* channel state pointer */\
  }, \
  { \
    8u, /* channel id */ \
    PWM_FIXED_PERIOD, /* channel type */ \
    0x0u, /* duty */ \
    60000u, /* default period ticks */ \
    PWM_LOW, /* idle output */ \
    PWM_HIGH, /* active output */ \
    0u, /* start delay */ \
    0x00u, /* prescaler register value, equates to prescaler: 1 */ \
    NULL_PTR, /* notification ptr */ \
    0u, /* default ADC trigger ticks */ \
    PWM_CFG_REGISTER_BASE_ADDRESS_BTimer16bit_20, /* BASE address */ \
    PWM_CFG_REGISTER_BTSEL_ADDRESS_BTimer16bit_20, /* BTSEL address */ \
    0u, /* External compare ticks to global timer ticks */ \
    TRUE, /* channel is started by Pwm_Init() */ \
    FALSE, /* debug mode of channel (TRUE = halt, FALSE = continue) */ \
    &Pwm_ChannelState[8u], /* channel state pointer */\
  } \
}

/** \brief Number of configured channel groups */
#define PWM_NUMBER_OF_GROUPS 0

/** \brief Global Timer usage */
#define PWM_GLOBALTIMER_USED   STD_OFF

/*------------------[Cypress module config version identification]---------*/

#if (defined PWM_CFG_MAJOR_VERSION) /* to prevent double declaration */
#error PWM_CFG_MAJOR_VERSION already defined
#endif /* if (defined PWM_CFG_MAJOR_VERSION) */

/** Driver config major version */
#define PWM_CFG_MAJOR_VERSION 1u

#if (defined PWM_CFG_MINOR_VERSION) /* to prevent double declaration */
#error PWM_CFG_MINOR_VERSION already defined
#endif /* if (defined PWM_CFG_MINOR_VERSION) */

/** Driver config minor version */
#define PWM_CFG_MINOR_VERSION 0u

#if (defined PWM_CFG_PATCH_VERSION) /* to prevent double declaration */
#error PWM_CFG_PATCH_VERSION already defined
#endif /* if (defined PWM_CFG_PATCH_VERSION) */

/** Driver config patch version */
#define PWM_CFG_PATCH_VERSION 28u

/*==================[type definitions]======================================*/

/*==================[external function declarations]========================*/

/** \brief Interrupt function prototype */
#define PWM_START_SEC_CODE
/* MISRA-C:2004 Rule 19.1 deviation: MemMap.h must be included in-line. */ /* PRQA S 5087 1 */
#include <MemMap.h>

/** \brief Pwm_Isr_Channel_8_Cat1
 **
 ** Channel specific CAT1 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 8 interrupt.
 */
extern ISR_NATIVE(Pwm_Isr_Channel_8_Cat1);

/** \brief Pwm_Isr_Channel_8_Cat2
 **
 ** Channel specific CAT2 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 8 interrupt.
 */
extern ISR(Pwm_Isr_Channel_8_Cat2);

/** \brief Pwm_Isr_Channel_23_Cat1
 **
 ** Channel specific CAT1 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 23 interrupt.
 */
extern ISR_NATIVE(Pwm_Isr_Channel_23_Cat1);

/** \brief Pwm_Isr_Channel_23_Cat2
 **
 ** Channel specific CAT2 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 23 interrupt.
 */
extern ISR(Pwm_Isr_Channel_23_Cat2);

/** \brief Pwm_Isr_Channel_13_Cat1
 **
 ** Channel specific CAT1 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 13 interrupt.
 */
extern ISR_NATIVE(Pwm_Isr_Channel_13_Cat1);

/** \brief Pwm_Isr_Channel_13_Cat2
 **
 ** Channel specific CAT2 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 13 interrupt.
 */
extern ISR(Pwm_Isr_Channel_13_Cat2);

/** \brief Pwm_Isr_Channel_18_Cat1
 **
 ** Channel specific CAT1 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 18 interrupt.
 */
extern ISR_NATIVE(Pwm_Isr_Channel_18_Cat1);

/** \brief Pwm_Isr_Channel_18_Cat2
 **
 ** Channel specific CAT2 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 18 interrupt.
 */
extern ISR(Pwm_Isr_Channel_18_Cat2);

/** \brief Pwm_Isr_Channel_19_Cat1
 **
 ** Channel specific CAT1 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 19 interrupt.
 */
extern ISR_NATIVE(Pwm_Isr_Channel_19_Cat1);

/** \brief Pwm_Isr_Channel_19_Cat2
 **
 ** Channel specific CAT2 interrupt handler which calls internal interrupt handler
 **
 ** The interrupt handler is associated to base timer 19 interrupt.
 */
extern ISR(Pwm_Isr_Channel_19_Cat2);

#define PWM_STOP_SEC_CODE
/* MISRA-C:2004 Rule 19.1 deviation: MemMap.h must be included in-line. */ /* PRQA S 5087 1 */
#include <MemMap.h>

/*==================[internal constants]====================================*/

/** Number of configured PWM channels */
#define PWM_NUMBER_OF_CHANNELS 9U

/*==================[internal data]=========================================*/

/*==================[end of file]===========================================*/

#endif /*!defined(PWM_CFG_H_INCLUDED)*/

